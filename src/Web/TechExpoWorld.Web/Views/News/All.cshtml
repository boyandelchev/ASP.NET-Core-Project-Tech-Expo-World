@model TechExpoWorld.Web.ViewModels.News.AllNewsArticlesQueryViewModel

@{
    ViewBag.Title = "All News";
}

<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-2">
            <label asp-for="Category" class="form-label"></label>
            <select asp-for="Category" class="form-select">
                <option value="">All</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category">@category</option>
                }
            </select>
        </div>

        <div class="col-md-2">
            <label asp-for="Tag" class="form-label"></label>
            <select asp-for="Tag" class="form-select">
                <option value="">All</option>
                @foreach (var tag in Model.Tags)
                {
                    <option value="@tag">@tag</option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <label asp-for="SearchTerm" class="form-label"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Advanced tech...">
        </div>

        <div class="col-md-2">
            <label asp-for="Sorting" class="form-label"></label>
            <select asp-for="Sorting" class="form-select">
                <option value="2">Descending</option>
                <option value="1">Ascending</option>
            </select>
        </div>

        <div class="col-md-3 d-flex align-items-end mt-3">
            <input type="submit" class="btn btn-success flex-grow-1" value="Search" />
            <input type="reset" class="btn btn-secondary ms-3" value="Clear" />
        </div>
    </div>
</form>

@if (!Model.NewsArticles.Any())
{
    <h2 class="text-center">No news articles found by the given criteria!</h2>
}
else
{
    <partial name="_NewsArticlesPartial" model="Model.NewsArticles" />
    <partial name="_NewsArticlesNavigationPartial" model="Model" />
}

@section Scripts {
    <script>
        const selectCategory = document.getElementById('Category');
        const selectTag = document.getElementById('Tag');
        const removeAttributeSelectedCategory = () => selectCategory
            .querySelector('option[selected]')?.removeAttribute('selected');
        const removeAttributeSelectedTag = () => selectTag
            .querySelector('option[selected]')?.removeAttribute('selected');

        selectCategory
            .addEventListener('change', (e) => {
                removeAttributeSelectedCategory();
            });

        selectTag
            .addEventListener('change', (e) => {
                removeAttributeSelectedTag();
            });

        document.querySelector('input[type="reset"]')
            .addEventListener('click', (e) => {
                e.preventDefault();

                removeAttributeSelectedCategory();
                selectCategory.options[0].setAttribute('selected', 'selected');

                removeAttributeSelectedTag();
                selectTag.options[0].setAttribute('selected', 'selected');

                document.getElementById('SearchTerm').value = '';
            });
    </script>
}