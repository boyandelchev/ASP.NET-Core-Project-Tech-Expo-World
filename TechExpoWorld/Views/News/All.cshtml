@model AllNewsQueryModel

@{ 
    ViewBag.Title = "All News";
}

<form method="get" class="mb-3">
    <div class="row">
        <div class="form-group col-md-2">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-2">
            <div class="form-group">
                <label asp-for="Tag"></label>
                <select asp-for="Tag" class="form-control">
                    <option value="">All</option>
                    @foreach (var tag in Model.Tags)
                    {
                        <option value="@tag">@tag</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-4">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Advanced tech...">
        </div>

        <div class="form-group col-md-2">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="1">Ascending</option>
                    <option value="2" selected>Descending</option>
                </select>
            </div>
        </div>

        <div class="form-inline col-md-2">
            <input class="btn btn-success" type="submit" value="Search" />
        </div>
    </div>
</form>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalNewsArticles / AllNewsQueryModel.NewsArticlesPerPage);

    var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.News.Any();

    ViewBag.PreviousPage = previousPage;
    ViewBag.MaxPage = maxPage;
    ViewBag.ShouldButtonBeDisabled = shouldButtonBeDisabled;
}

<div class="row mb-3">
    <div class="col-sm-3 col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="News"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-tag="@Model.Tag"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>
    <div class="col-sm-3 col-md-6">
        <a class="btn btn-primary float-sm-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="News"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-tag="@Model.Tag"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>

@if (!Model.News.Any())
{
    <h2 class="text-center">No news articles found by the given criteria!</h2>
}
else
{
    <partial name="_NewsPageNavigation" model="Model" />
    <partial name="_NewsArticlesPartial" model="Model.News" />
    <partial name="_NewsPageNavigation" model="Model" />
}